0
1
5
5
3
1
2
3
4
5
LOAD R0, [2] r0 = n #comienzo
LOAD R1, [3] r1 = *arr izquierdo
ADD R0, R1, R0 r0 = *arr + n derecho
JLE R0, R1 [1D] salto al final #ciclo
ADD R3, R0, R1 r3 = r0 + r1
SHR R3, R3 r3 = r3//2
STORE R3, [22] medio = r3
LOAD R3, [R3] r3 = arr[medio]
LOAD R2, [4] r2 = objetivo
BEQ R3, R2 [1D] si es igual, termine
BLT R3, R2 [19] si es menor asigne el izquierdo #saltito
LOAD R2, [1] r2 = 1
LOAD R3, [22]
SUB R0, R3, R2 derecho = medio - 1
JUMP [D]
LOAD R2, [1] r2 = 1 #izq
LOAD R3, [22]
ADD R1, R3, R2
JUMP [D]
LOAD R1, [2] r1 = n #final
LOAD R2, [22]
SUB R2, R2, R1
STORE R2, [22]
HALT